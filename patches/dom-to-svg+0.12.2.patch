diff --git a/node_modules/dom-to-svg/lib/element.js b/node_modules/dom-to-svg/lib/element.js
index 06c4d99..c12a12a 100644
--- a/node_modules/dom-to-svg/lib/element.js
+++ b/node_modules/dom-to-svg/lib/element.js
@@ -150,7 +150,13 @@ export function handleElement(element, context) {
             (element.getAttribute('src') || element.getAttribute('srcset'))) {
             const svgImage = context.svgDocument.createElementNS(svgNamespace, 'image');
             svgImage.id = `${id}-image`; // read by inlineResources()
+            // use href and xlink:href since the standard requires href, but many svg readers expect the deprecated xlink:href
+            svgImage.setAttribute('href', element.currentSrc || element.src);
             svgImage.setAttribute('xlink:href', element.currentSrc || element.src);
+
+            // support object-fit: cover
+            if (window.getComputedStyle(element).objectFit === 'cover') svgImage.setAttribute('preserveAspectRatio', 'xMidYMid slice');
+            
             const paddingLeft = (_a = parseCSSLength(styles.paddingLeft, bounds.width)) !== null && _a !== void 0 ? _a : 0;
             const paddingRight = (_b = parseCSSLength(styles.paddingRight, bounds.width)) !== null && _b !== void 0 ? _b : 0;
             const paddingTop = (_c = parseCSSLength(styles.paddingTop, bounds.height)) !== null && _c !== void 0 ? _c : 0;
@@ -242,6 +248,8 @@ function addBackgroundAndBorders(styles, bounds, backgroundAndBordersContainer,
                         // not the page. But we have no means to know what stylesheet the style came from
                         // (unless we iterate through all rules in all style sheets and find the matching one).
                         const url = new URL(unescapeStringValue(urlArgument.value), window.location.href);
+                        // use href and xlink:href since the standard requires href, but many svg readers expect the deprecated xlink:href
+                        image.setAttribute('href', url.href);
                         image.setAttribute('xlink:href', url.href);
                         if (backgroundRepeat === 'no-repeat' ||
                             (backgroundPositionX === 0 &&
diff --git a/node_modules/dom-to-svg/lib/inline.js b/node_modules/dom-to-svg/lib/inline.js
index 1097009..ef5af32 100644
--- a/node_modules/dom-to-svg/lib/inline.js
+++ b/node_modules/dom-to-svg/lib/inline.js
@@ -60,6 +60,8 @@ export async function inlineResources(element) {
                     // Inline binary images as base64 data: URL
                     const dataUrl = await blobToDataURL(blob);
                     element.dataset.src = element.href.baseVal;
+                    // use href and xlink:href since the standard requires href, but many svg readers expect the deprecated xlink:href
+                    element.setAttribute('href', dataUrl.href);
                     element.setAttribute('xlink:href', dataUrl.href);
                 }
             }
diff --git a/node_modules/dom-to-svg/lib/text.js b/node_modules/dom-to-svg/lib/text.js
index bfd1a53..1d2f6e6 100644
--- a/node_modules/dom-to-svg/lib/text.js
+++ b/node_modules/dom-to-svg/lib/text.js
@@ -57,7 +57,8 @@ export function handleTextNode(textNode, context) {
             textSpan.setAttribute('x', lineRectangle.x.toString());
             textSpan.setAttribute('y', lineRectangle.bottom.toString()); // intentionally bottom because of dominant-baseline setting
             textSpan.setAttribute('textLength', lineRectangle.width.toString());
-            textSpan.setAttribute('lengthAdjust', 'spacingAndGlyphs');
+            // set lengthAdjust to spacing, which inserts space between each character if there are not enough characters to use the full line width
+            textSpan.setAttribute('lengthAdjust', 'spacing');
             svgTextElement.append(textSpan);
         };
         try {
